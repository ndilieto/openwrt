From 385e7a5a4c2735ca4280a3dcc96a87b06d94a5fa Mon Sep 17 00:00:00 2001
From: Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
Date: Wed, 17 Jun 2015 11:59:45 +0200
Subject: [PATCH 131/158] MIPS: add board support for Zyxel gw400 series

This supports Gateway 400 and VMG8029.

Signed-off-by: Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
---
 board/zyxel/gateway400/Makefile       |   7 ++
 board/zyxel/gateway400/config.mk      |   7 ++
 board/zyxel/gateway400/ddr_settings.h |  68 +++++++++++
 board/zyxel/gateway400/gateway400.c   | 222 ++++++++++++++++++++++++++++++++++
 boards.cfg                            |   3 +
 include/configs/gateway400.h          | 145 ++++++++++++++++++++++
 6 files changed, 452 insertions(+)
 create mode 100644 board/zyxel/gateway400/Makefile
 create mode 100644 board/zyxel/gateway400/config.mk
 create mode 100644 board/zyxel/gateway400/ddr_settings.h
 create mode 100644 board/zyxel/gateway400/gateway400.c
 create mode 100644 include/configs/gateway400.h

diff --git a/board/zyxel/gateway400/Makefile b/board/zyxel/gateway400/Makefile
new file mode 100644
index 0000000000..8f222513b8
--- /dev/null
+++ b/board/zyxel/gateway400/Makefile
@@ -0,0 +1,7 @@
+#
+# Copyright (C) 2011-2015 Daniel Schwierzeck, daniel.schwierzeck@gmail.com
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y	= gateway400.o
diff --git a/board/zyxel/gateway400/config.mk b/board/zyxel/gateway400/config.mk
new file mode 100644
index 0000000000..acdecc43df
--- /dev/null
+++ b/board/zyxel/gateway400/config.mk
@@ -0,0 +1,7 @@
+#
+# Copyright (C) 2012-2015 Daniel Schwierzeck, daniel.schwierzeck@gmail.com
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+PLATFORM_CPPFLAGS += -Iboard/$(BOARDDIR)
diff --git a/board/zyxel/gateway400/ddr_settings.h b/board/zyxel/gateway400/ddr_settings.h
new file mode 100644
index 0000000000..2ecdadf135
--- /dev/null
+++ b/board/zyxel/gateway400/ddr_settings.h
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2011-2015 Daniel Schwierzeck, daniel.schwierzeck@gmail.com
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#define	MC_CCR00_VALUE	0x101
+#define	MC_CCR01_VALUE	0x1000101
+#define	MC_CCR02_VALUE	0x1010000
+#define	MC_CCR03_VALUE	0x101
+#define	MC_CCR04_VALUE	0x1000000
+#define	MC_CCR05_VALUE	0x1000101
+#define	MC_CCR06_VALUE	0x1000100
+#define	MC_CCR07_VALUE	0x1010000
+#define	MC_CCR08_VALUE	0x1000101
+#define	MC_CCR09_VALUE	0x0
+#define	MC_CCR10_VALUE	0x2000100
+#define	MC_CCR11_VALUE	0x2000300
+#define	MC_CCR12_VALUE	0x30000
+#define	MC_CCR13_VALUE	0x202
+#define	MC_CCR14_VALUE	0x7080A0F
+#define	MC_CCR15_VALUE	0x2040F
+#define	MC_CCR16_VALUE	0x40000
+#define	MC_CCR17_VALUE	0x70102
+#define	MC_CCR18_VALUE	0x4020002
+#define	MC_CCR19_VALUE	0x30302
+#define	MC_CCR20_VALUE	0x8000700
+#define	MC_CCR21_VALUE	0x40F020A
+#define	MC_CCR22_VALUE	0x0
+#define	MC_CCR23_VALUE	0xC020000
+#define	MC_CCR24_VALUE	0x4401B04
+#define	MC_CCR25_VALUE	0x0
+#define	MC_CCR26_VALUE	0x0
+#define	MC_CCR27_VALUE	0x6420000
+#define	MC_CCR28_VALUE	0x0
+#define	MC_CCR29_VALUE	0x0
+#define	MC_CCR30_VALUE	0x798
+#define	MC_CCR31_VALUE	0x0
+#define	MC_CCR32_VALUE	0x0
+#define	MC_CCR33_VALUE	0x650000
+#define	MC_CCR34_VALUE	0x200C8
+#define	MC_CCR35_VALUE	0x1D445D
+#define	MC_CCR36_VALUE	0xC8
+#define	MC_CCR37_VALUE	0xC351
+#define	MC_CCR38_VALUE	0x0
+#define	MC_CCR39_VALUE	0x141F20
+#define	MC_CCR40_VALUE	0x141F20
+#define	MC_CCR41_VALUE	0x141F20
+#define	MC_CCR42_VALUE	0x141F20
+#define	MC_CCR43_VALUE	0x566501
+#define	MC_CCR44_VALUE	0x566501
+#define	MC_CCR45_VALUE	0x566501
+#define	MC_CCR46_VALUE	0x566501
+#define	MC_CCR47_VALUE	0x0
+#define	MC_CCR48_VALUE	0x0
+#define	MC_CCR49_VALUE	0x0
+#define	MC_CCR50_VALUE	0x0
+#define	MC_CCR51_VALUE	0x0
+#define	MC_CCR52_VALUE	0x133
+#define	MC_CCR53_VALUE	0xF3004B27
+#define	MC_CCR54_VALUE	0xF3004B27
+#define	MC_CCR55_VALUE	0xF3004B27
+#define	MC_CCR56_VALUE	0xF3004B27
+#define	MC_CCR57_VALUE	0x7800301
+#define	MC_CCR58_VALUE	0x7800301
+#define	MC_CCR59_VALUE	0x7800301
+#define	MC_CCR60_VALUE	0x7800301
+#define	MC_CCR61_VALUE	0x4
diff --git a/board/zyxel/gateway400/gateway400.c b/board/zyxel/gateway400/gateway400.c
new file mode 100644
index 0000000000..79f8ea4260
--- /dev/null
+++ b/board/zyxel/gateway400/gateway400.c
@@ -0,0 +1,222 @@
+/*
+ * Copyright (C) 2011-2015 Daniel Schwierzeck, daniel.schwierzeck@gmail.com
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <spi.h>
+#include <asm/gpio.h>
+#include <asm/lantiq/eth.h>
+#include <asm/lantiq/chipid.h>
+#include <asm/lantiq/cpu.h>
+#include <asm/lantiq/mem.h>
+#include <asm/arch/gphy.h>
+
+#if defined(CONFIG_SPL_BUILD)
+#define do_gpio_init	1
+#define do_pll_init	1
+#define do_dcdc_init	0
+#elif defined(CONFIG_SYS_BOOT_RAM)
+#define do_gpio_init	1
+#define do_pll_init	0
+#define do_dcdc_init	1
+#else
+#define do_gpio_init	0
+#define do_pll_init	0
+#define do_dcdc_init	1
+#endif
+
+static inline void gpio_init(void)
+{
+	/* GPIO button WLAN enable (low-active) */
+	gpio_direction_input(45);
+	/* GPIO button board reset (low-active) */
+	gpio_direction_input(46);
+
+	/* SPI CS 0.4 to serial flash */
+	gpio_direction_output(10, 1);
+
+	/* SPI CS 1.0..1.3 to ISAC-SX 0..3 */
+	gpio_direction_output(39, 1);
+	gpio_direction_output(32, 1);
+	gpio_direction_output(34, 1);
+	gpio_direction_output(22, 1);
+
+	/* Atheros AR8031 10/100/1000 PHY reset line */
+	gpio_direction_output(15, 1);
+
+	/* SPI CS 1.4 to PLL ZL30342 */
+	gpio_direction_output(37, 1);
+
+	/* USB port0 power enable, disabled at startup */
+	gpio_direction_output(41, 0);
+	/* USB port1 power enable, disabled at startup */
+	gpio_direction_output(33, 0);
+
+	/* EBU.FL_CS1 as output for NAND CE */
+	gpio_set_altfunc(23, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* EBU.FL_A23 as output for NAND CLE */
+	gpio_set_altfunc(24, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* EBU.FL_A24 as output for NAND ALE */
+	gpio_set_altfunc(13, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* GPIO 3.0 as input for NAND Ready Busy */
+	gpio_set_altfunc(48, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_IN);
+	/* GPIO 3.1 as output for NAND Read */
+	gpio_set_altfunc(49, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+
+	/* LEDC/LED_ST for LED shift register */
+	gpio_set_altfunc(4, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* LEDC/LED_D for LED shift register */
+	gpio_set_altfunc(5, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+	/* LEDC/LED_SH for LED shift register */
+	gpio_set_altfunc(6, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+
+	/* PCM DCL/FSC input/output switch -> default output */
+	gpio_direction_output(47, 1);
+
+	/* High output for supervisor */
+	gpio_direction_output(8, 1);
+}
+
+int board_early_init_f(void)
+{
+	if (do_gpio_init) {
+		ltq_gpio_init();
+		gpio_init();
+	}
+
+	if (do_pll_init)
+		ltq_pll_init();
+
+	if (do_dcdc_init)
+		ltq_dcdc_init(0x7F);
+
+	return 0;
+}
+
+int checkboard(void)
+{
+	puts("Board: " CONFIG_BOARD_NAME "\n");
+	ltq_chip_print_info();
+
+	return 0;
+}
+
+int misc_init_r(void)
+{
+	/* enable CLKOUT0 for Supervisor */
+	gpio_set_altfunc(8, GPIO_ALTSEL_SET, GPIO_ALTSEL_CLR, GPIO_DIR_OUT);
+
+	return mc_tune_store_flash();
+}
+
+static const struct ltq_eth_port_config eth_port_config[] = {
+	/* GMAC0: Lantiq S-VIP */
+	{ 0, 0x0, LTQ_ETH_PORT_NONE, PHY_INTERFACE_MODE_NONE },
+	/* GMAC1: unused */
+	{ 1, 0x0, LTQ_ETH_PORT_NONE, PHY_INTERFACE_MODE_NONE },
+	/* GMAC2: internal GPHY0 with 10/100/1000 firmware for LAN port 0 */
+	{ 2, 0x11, LTQ_ETH_PORT_PHY, PHY_INTERFACE_MODE_GMII },
+	/* GMAC3: unused */
+	{ 3, 0x0, LTQ_ETH_PORT_NONE, PHY_INTERFACE_MODE_NONE },
+	/* GMAC4: internal GPHY1 with 10/100/1000 firmware for LAN port 1 */
+	{ 4, 0x13, LTQ_ETH_PORT_PHY, PHY_INTERFACE_MODE_GMII },
+	/* GMAC5: external Atheros AR8031 10/100/1000 PHY for WANoE port */
+	{ 5, 0x0, LTQ_ETH_PORT_PHY, PHY_INTERFACE_MODE_RGMII, 0, 3, 1 },
+};
+
+static const struct ltq_eth_board_config eth_board_config = {
+	.ports = eth_port_config,
+	.num_ports = ARRAY_SIZE(eth_port_config),
+};
+
+int board_eth_init(bd_t * bis)
+{
+	const enum ltq_gphy_clk clk = LTQ_GPHY_CLK_25MHZ_PLL0;
+	const ulong fw_ge_addr = 0x80FE0000;
+
+	ltq_gphy_phy11g_a2x_load(fw_ge_addr);
+
+	ltq_cgu_gphy_clk_src(clk);
+
+	ltq_rcu_gphy_boot(0, fw_ge_addr);
+	ltq_rcu_gphy_boot(1, fw_ge_addr);
+
+	return ltq_eth_initialize(&eth_board_config);
+}
+
+int spi_cs_is_valid(unsigned int bus, unsigned int cs)
+{
+	/* Serial flash at bus 0 (SPI) */
+	if (bus == 0 && cs == 4)
+		return 1;
+
+	/* ISAC-SX 0..3 at bus 1 (USIF) */
+	if (bus == 1 && cs < 4)
+		return 1;
+
+	return 0;
+}
+
+void spi_cs_activate(struct spi_slave *slave)
+{
+	int gpio = -1;
+
+	/* Serial flash at bus 0 (SPI) */
+	if (slave->bus == 0 && slave->cs == 4)
+		gpio = 10;
+
+	else if (slave->bus == 1) {
+		switch (slave->cs) {
+		case 0:		/* ISAC-SX 0 */
+			gpio = 39;
+			break;
+		case 1:		/* ISAC-SX 1 */
+			gpio = 32;
+			break;
+		case 2:		/* ISAC-SX 2 */
+			gpio = 34;
+			break;
+		case 3:		/* ISAC-SX 3 */
+			gpio = 22;
+			break;
+		default:
+			break;
+		}
+	}
+
+	if (gpio >= 0)
+		gpio_set_value(gpio, 0);
+}
+
+void spi_cs_deactivate(struct spi_slave *slave)
+{
+	int gpio = -1;
+
+	/* Serial flash at bus 0 (SPI) */
+	if (slave->bus == 0 && slave->cs == 4)
+		gpio = 10;
+
+	else if (slave->bus == 1) {
+		switch (slave->cs) {
+		case 0:		/* ISAC-SX 0 */
+			gpio = 39;
+			break;
+		case 1:		/* ISAC-SX 1 */
+			gpio = 32;
+			break;
+		case 2:		/* ISAC-SX 2 */
+			gpio = 34;
+			break;
+		case 3:		/* ISAC-SX 3 */
+			gpio = 22;
+			break;
+		default:
+			break;
+		}
+	}
+
+	if (gpio >= 0)
+		gpio_set_value(gpio, 1);
+}
diff --git a/boards.cfg b/boards.cfg
index 56bddd9ca4..e33cdfa3ba 100644
--- a/boards.cfg
+++ b/boards.cfg
@@ -531,6 +531,9 @@ Active  mips        mips32         vrx200      lantiq          easy80920
 Active  mips        mips32         vrx200      lantiq          easy80920           easy80920_norspl                      easy80920:SYS_BOOT_NORSPL                                                                                                         Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
 Active  mips        mips32         vrx200      lantiq          easy80920           easy80920_ram                         easy80920:SYS_BOOT_RAM                                                                                                            Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
 Active  mips        mips32         vrx200      lantiq          easy80920           easy80920_sfspl                       easy80920:SYS_BOOT_SFSPL                                                                                                          Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
+Active  mips        mips32         vrx200      zyxel           gateway400          gateway400_nandspl                    gateway400:SYS_BOOT_NANDSPL                                                                                                       Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
+Active  mips        mips32         vrx200      zyxel           gateway400          gateway400_ram                        gateway400:SYS_BOOT_RAM                                                                                                           Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
+Active  mips        mips32         vrx200      zyxel           gateway400          gateway400_sfspl                      gateway400:SYS_BOOT_SFSPL                                                                                                         Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
 Active  mips        mips32         vrx200      zyxel           slx501              slx501_nandspl                        slx501:SYS_BOOT_NANDSPL                                                                                                           Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
 Active  mips        mips32         vrx200      zyxel           slx501              slx501_ram                            slx501:SYS_BOOT_RAM                                                                                                               Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
 Active  mips        mips32         vrx200      zyxel           slx501              slx501_sfspl                          slx501:SYS_BOOT_SFSPL                                                                                                             Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
diff --git a/include/configs/gateway400.h b/include/configs/gateway400.h
new file mode 100644
index 0000000000..482f9cd698
--- /dev/null
+++ b/include/configs/gateway400.h
@@ -0,0 +1,145 @@
+/*
+ * Copyright (C) 2011-2015 Daniel Schwierzeck, daniel.schwierzeck@gmail.com
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#define CONFIG_IDENT_STRING	" gw400"
+#define CONFIG_BOARD_NAME	"Zyxel gw400 series [410, 411]"
+
+/* Configure SoC */
+#define CONFIG_LTQ_SUPPORT_UART		/* Enable ASC and UART */
+
+#define CONFIG_LTQ_SUPPORT_ETHERNET	/* Enable ethernet */
+#define CONFIG_FW_VRX200_PHY11G_A2X
+
+#define CONFIG_LTQ_SSIO_SHIFT_REGS	2
+#define CONFIG_LTQ_SSIO_EDGE_FALLING
+#define CONFIG_LTQ_SSIO_GPHY1_MODE	0x3
+#define CONFIG_LTQ_SSIO_GPHY2_MODE	0x3
+#define CONFIG_LTQ_SSIO_INIT_VALUE	0xff03
+
+#define CONFIG_LTQ_SUPPORT_SPI_FLASH
+#define CONFIG_SPI_FLASH_MACRONIX	/* Supports MX29LV620 serial flash */
+#define CONFIG_SPI_FLASH_SPANSION	/* Supports SF25FL256S serial flash */
+#define CONFIG_SPI_FLASH_EON		/* Supports EN25QH256 serial flash */
+
+#define CONFIG_LTQ_SUPPORT_NAND_FLASH
+#if defined(CONFIG_SYS_BOOT_NANDSPL)
+#define CONFIG_SYS_NAND_USE_FLASH_BBT
+#endif
+#define CONFIG_BCH
+#define CONFIG_NAND_ECC_BCH
+
+#define CONFIG_LTQ_SUPPORT_SPL_SPI_FLASH	/* Build SPI flash SPL */
+#define CONFIG_SF_DEFAULT_BUS		0
+#define CONFIG_SF_DEFAULT_CS		4
+#define CONFIG_SF_DEFAULT_SPEED		25000000
+#define CONFIG_SF_DEFAULT_MODE		0
+
+#define CONFIG_LTQ_SUPPORT_SPL_NAND_FLASH	/* Build NAND flash SPL */
+#define CONFIG_LTQ_NAND_CS1
+#define CONFIG_SYS_NAND_PAGE_COUNT	64
+#define CONFIG_SYS_NAND_PAGE_SIZE	2048
+#define CONFIG_SYS_NAND_OOBSIZE		64
+#define CONFIG_SYS_NAND_BLOCK_SIZE	(128 * 1024)
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE
+#define CONFIG_SYS_NAND_ECC_NONE
+
+#define CONFIG_LTQ_SPL_COMP_LZO
+#define CONFIG_LTQ_SPL_CONSOLE
+#define CONFIG_LTQ_SPL_MC_TUNE
+#define CONFIG_SYS_DRAM_PROBE
+#define CONFIG_MISC_INIT_R
+
+/* MTD devices */
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_SPI_FLASH_MTD
+#define CONFIG_CMD_MTD
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_CMD_UBI
+#define CONFIG_RBTREE
+
+/* Environment */
+#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
+#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
+#define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPEED
+#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
+
+#if defined(CONFIG_SYS_BOOT_SFSPL)
+#define CONFIG_SPL_U_BOOT_OFFS		0x7000
+#define CONFIG_SPL_U_BOOT_SIZE		0x44000
+#define CONFIG_SPL_MC_TUNE_OFFS		0x6800
+
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_ENV_OFFSET		(512 * 1024)
+#define CONFIG_ENV_SECT_SIZE		(256 * 1024)
+
+#define MTDIDS_DEFAULT			"nor0=spi0.4"
+#define MTDPARTS_DEFAULT		\
+	"mtdparts=spi0.4:512k(uboot),256k(uboot_env)"
+#elif defined(CONFIG_SYS_BOOT_NANDSPL)
+#define CONFIG_SPL_TPL_OFFS		0x800
+#define CONFIG_SPL_TPL_SIZE		0x5000
+#define CONFIG_SPL_MC_TUNE_OFFS		0x5800
+#define CONFIG_SPL_U_BOOT_OFFS		0x20000
+#define CONFIG_SPL_U_BOOT_SIZE		0x44000
+
+#define CONFIG_ENV_IS_IN_UBI
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_ENV_UBI_PART		"ubi"
+#define CONFIG_ENV_UBI_VOLUME		"uboot_env"
+#define CONFIG_ENV_UBI_VID_HDR_OFF	"2048"
+
+#define MTDIDS_DEFAULT			"nand0=nand-xway"
+#define MTDPARTS_DEFAULT		\
+	"mtdparts=nand-xway:512k(uboot),-(ubi)"
+#else
+#define CONFIG_ENV_IS_NOWHERE
+
+#define MTDIDS_DEFAULT			"nor0=spi0.4"
+#define MTDPARTS_DEFAULT		"mtdparts="
+#endif
+
+#define CONFIG_ENV_SIZE			(8 * 1024)
+
+#define CONFIG_LOADADDR			CONFIG_SYS_LOAD_ADDR
+
+/* Console */
+#define CONFIG_LTQ_ADVANCED_CONSOLE
+#define CONFIG_BAUDRATE			115200
+#define CONFIG_CONSOLE_ASC		1
+
+/* Commands */
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_MISC
+#define CONFIG_CMD_ECHO
+
+/* Boot */
+#define CONFIG_MIPS_BOOT_FDT
+#define CONFIG_FIT
+#define CONFIG_OF_LIBFDT
+#define CONFIG_LZMA
+#define CONFIG_LZO
+
+/* Environment */
+#define CONFIG_LOADADDR			CONFIG_SYS_LOAD_ADDR
+
+#define CONFIG_ENV_MTDPARTS			\
+	"mtdids="MTDIDS_DEFAULT"\0"		\
+	"mtdparts="MTDPARTS_DEFAULT"\0"
+
+/* Pull in default board configs for Lantiq XWAY VRX200 */
+#include <asm/lantiq/config.h>
+#include <asm/arch/config.h>
+
+#define CONFIG_EXTRA_ENV_SETTINGS	\
+	CONFIG_ENV_LANTIQ_DEFAULTS	\
+	CONFIG_ENV_MTDPARTS
+
+#endif /* __CONFIG_H */
-- 
2.11.0

