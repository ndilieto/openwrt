From 08c88226bfe84177f32ee2aee6bbd672169e1800 Mon Sep 17 00:00:00 2001
From: Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
Date: Tue, 3 Jan 2017 00:25:51 +0100
Subject: [PATCH 094/158] mtd: nand: make nand_command[_lp] public

Make functions nand_command[_lp] public to be able to use them
in NAND controller drivers and to avoid code duplication.

Signed-off-by: Daniel Schwierzeck <daniel.schwierzeck@gmail.com>
---
 drivers/mtd/nand/nand_base.c | 8 ++++----
 include/linux/mtd/nand.h     | 6 ++++++
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/mtd/nand/nand_base.c b/drivers/mtd/nand/nand_base.c
index 0692a140f7..68e5e82921 100644
--- a/drivers/mtd/nand/nand_base.c
+++ b/drivers/mtd/nand/nand_base.c
@@ -607,8 +607,8 @@ static void nand_wait_status_ready(struct mtd_info *mtd, unsigned long timeo)
  * Send command to NAND device. This function is used for small page devices
  * (512 Bytes per page).
  */
-static void nand_command(struct mtd_info *mtd, unsigned int command,
-			 int column, int page_addr)
+void nand_command(struct mtd_info *mtd, unsigned int command,
+		  int column, int page_addr)
 {
 	register struct nand_chip *chip = mtd->priv;
 	int ctrl = NAND_CTRL_CLE | NAND_CTRL_CHANGE;
@@ -710,8 +710,8 @@ static void nand_command(struct mtd_info *mtd, unsigned int command,
  * devices. We don't have the separate regions as we have in the small page
  * devices. We must emulate NAND_CMD_READOOB to keep the code compatible.
  */
-static void nand_command_lp(struct mtd_info *mtd, unsigned int command,
-			    int column, int page_addr)
+void nand_command_lp(struct mtd_info *mtd, unsigned int command,
+		     int column, int page_addr)
 {
 	register struct nand_chip *chip = mtd->priv;
 
diff --git a/include/linux/mtd/nand.h b/include/linux/mtd/nand.h
index 2adc676fd1..219552bdcf 100644
--- a/include/linux/mtd/nand.h
+++ b/include/linux/mtd/nand.h
@@ -41,6 +41,12 @@ extern void nand_release(struct mtd_info *mtd);
 /* Internal helper for board drivers which need to override command function */
 extern void nand_wait_ready(struct mtd_info *mtd);
 
+extern void nand_command(struct mtd_info *mtd, unsigned int command,
+			 int column, int page_addr);
+
+extern void nand_command_lp(struct mtd_info *mtd, unsigned int command,
+			    int column, int page_addr);
+
 /*
  * This constant declares the max. oobsize / page, which
  * is supported now. If you add a chip with bigger oobsize/page
-- 
2.11.0

